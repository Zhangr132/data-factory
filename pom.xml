<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.data</groupId>
    <artifactId>data-factory</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>data-factory</name>
    <description>data-factory</description>
    <properties>
        <data.version>0.0.1-SNAPSHOT</data.version>
        <java.version>1.8</java.version>
        <mybatisplus.version>3.5.1</mybatisplus.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-boot.version>2.6.13</spring-boot.version>
        <swagger.version>2.9.2</swagger.version>
        <satoken.version>1.37.0</satoken.version>
        <bitwalker.version>1.21</bitwalker.version>
        <druid.version>1.2.20</druid.version>
        <kaptcha.version>2.3.3</kaptcha.version>
        <knife4j.version>2.0.7</knife4j.version>
        <pagehelper.boot.version>1.4.7</pagehelper.boot.version>
        <fastjson.version>2.0.43</fastjson.version>
        <oshi.version>6.4.13</oshi.version>
        <commons.io.version>2.13.0</commons.io.version>
        <easypoi.version>4.4.0</easypoi.version>
        <poi.version>4.1.2</poi.version>
        <velocity.version>2.0</velocity.version>
        <jjwt.version>0.9.1</jjwt.version>
        <jwt.version>3.4.0</jwt.version>
        <mysql.version>8.0.27</mysql.version>
        <lombok.version>1.18.20</lombok.version>
    </properties>

    <!-- 模块说明：这里声明多个子模块 -->
    <modules>
        <module>admin</module>
        <module>common</module>
        <module>data-asset</module>
        <module>data-source</module>
        <module>data-standard</module>
        <module>script</module>
    </modules>
    <!-- 父模块打包类型必须为pom -->
    <packaging>pom</packaging>

    <!-- 依赖导入 -->
    <dependencies>
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter</artifactId>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <!-- 版本说明：这里统一管理依赖的版本号 -->
    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot的依赖配置-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- mysql依赖 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!-- lombok依赖 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>true</optional>
            </dependency>

            <!-- 解析客户端操作系统、浏览器等 -->
            <dependency>
                <groupId>eu.bitwalker</groupId>
                <artifactId>UserAgentUtils</artifactId>
                <version>${bitwalker.version}</version>
            </dependency>

            <!-- pagehelper 分页插件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.boot.version}</version>
            </dependency>
            <!--Excel导入导出：EasyPoi依赖-->
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-spring-boot-starter</artifactId>
                <version>${easypoi.version}</version>
            </dependency>

            <!--mybatisplus依赖-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>

            <!--代码生成器-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-freemarker</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- p6spy 数据库性能监控工具 -->
            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>

            <!-- 获取系统信息 -->
            <dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi.version}</version>
            </dependency>

            <!-- sa-token 权限认证, 在线文档：https://sa-token.cc/ -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-spring-boot-starter</artifactId>
                <version>${satoken.version}</version>
            </dependency>

            <!-- Sa-Token 整合 Redis （使用 jdk 默认序列化方式） -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-redis</artifactId>
                <version>${satoken.version}</version>
            </dependency>

            <!-- io常用工具类 -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>

            <!-- excel工具 -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!-- velocity代码生成使用模板 -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>

            <!-- 阿里数据库连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- 阿里JSON解析器 -->
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- Token生成与解析-->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <!-- java-jwt -->
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${jwt.version}</version>
            </dependency>

            <!-- 引入 Swagger 依赖 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <!-- swagger2-UI -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <!-- 集成Knife4j到Spring Boot项目 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- 验证码 -->
            <dependency>
                <groupId>pro.fessional</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>

            <!-- 用户端 -->
            <dependency>
                <groupId>com.data</groupId>
                <artifactId>admin</artifactId>
                <version>${data.version}</version>
            </dependency>

            <!-- 通用工具 -->
            <dependency>
                <groupId>com.data</groupId>
                <artifactId>common</artifactId>
                <version>${data.version}</version>
            </dependency>

            <!-- 数据资产管理 -->
            <dependency>
                <groupId>com.data</groupId>
                <artifactId>data-asset</artifactId>
                <version>${data.version}</version>
            </dependency>

            <!-- 数据源管理 -->
            <dependency>
                <groupId>com.data</groupId>
                <artifactId>data-source</artifactId>
                <version>${data.version}</version>
            </dependency>

            <!-- 数据标准管理 -->
            <dependency>
                <groupId>com.data</groupId>
                <artifactId>data-standard</artifactId>
                <version>${data.version}</version>
            </dependency>

            <!-- 脚本管理 -->
            <dependency>
                <groupId>com.data</groupId>
                <artifactId>script</artifactId>
                <version>${data.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <plugins>
            <!--编译 Java 代码-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!--打包到一个可执行的超级 JAR 文件-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-shade-plugin</artifactId>-->
<!--                <version>3.2.4</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>shade</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <createDependencyReducedPom>false</createDependencyReducedPom>-->
<!--                            <shadedArtifactAttached>true</shadedArtifactAttached>-->
<!--                            <shadedClassifierName>shaded</shadedClassifierName>-->
<!--                            <transformers>-->
<!--                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
<!--                                    <mainClass>com.data.AdminApplication</mainClass> &lt;!&ndash; 替换为你的启动类名 &ndash;&gt;-->
<!--                                </transformer>-->
<!--                            </transformers>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <!--官方提供的 Maven 插件，用于打包 Spring Boot 应用程序-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <!--在打包过程中包含系统范围的依赖项-->
                    <includeSystemScope>true</includeSystemScope>
                    <!--指定 Java 应用程序的主类-->
                    <mainClass>com.data.AdminApplication</mainClass>
<!--                    <skip>true</skip>-->
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <!-- 注：maven默认是不编译xml文件的，因此加上如下resources才会生产对应的xml文件 目的：解决mybatis映射关系不对应问题  start =============== -->
        <resources>
            <!-- 可以根据需要配置资源目录 -->
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
<!--                    <include>**/*.properties</include>-->
                    <!-- 可以根据需要配置其他资源文件的后缀名 -->
                </includes>
                <!--不要对该资源文件进行过滤处理-->
                <filtering>false</filtering>
            </resource>
            <!-- 可以根据需要配置其他资源目录 -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
<!--        <testResources>-->
<!--            <testResource>-->
<!--                <directory>src/main/java</directory>-->
<!--                <includes>-->
<!--                    <include>**/*.xml</include>-->
<!--                </includes>-->
<!--                <filtering>false</filtering>-->
<!--            </testResource>-->
<!--        </testResources>-->
        <!-- 注：maven默认是不编译，因此加上如下resources才会生产对应的xml文件 目的：解决mybatis映射关系不对应问题  end =============== -->

        <!-- 固定Jar包名字 -->
        <finalName>data-factory</finalName>
    </build>

</project>
