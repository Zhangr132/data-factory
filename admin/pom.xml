<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.data</groupId>
        <artifactId>data-factory</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>admin</artifactId>
    <description>用户端</description>

    <!-- 依赖导入-->
    <dependencies>
        <!-- spring-boot-devtools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional> <!-- 表示依赖不会传递 -->
        </dependency>

        <!-- 数据资产管理 -->
        <dependency>
            <groupId>com.data</groupId>
            <artifactId>data-asset</artifactId>
        </dependency>

        <!-- 数据源管理 -->
        <dependency>
            <groupId>com.data</groupId>
            <artifactId>data-source</artifactId>
        </dependency>

        <!-- 数据标准管理 -->
        <dependency>
            <groupId>com.data</groupId>
            <artifactId>data-standard</artifactId>
        </dependency>

        <!-- 脚本管理 -->
        <dependency>
            <groupId>com.data</groupId>
            <artifactId>script</artifactId>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <!--在打包过程中包含系统范围的依赖项-->
                    <includeSystemScope>true</includeSystemScope>
                    <!--指定 Java 应用程序的主类-->
                    <mainClass>com.data.AdminApplication</mainClass>
                    <!--                    <skip>true</skip>-->
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <!-- 可以根据需要配置资源目录 -->
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <!--                    <include>**/*.properties</include>-->
                    <!-- 可以根据需要配置其他资源文件的后缀名 -->
                </includes>
                <!--不要对该资源文件进行过滤处理-->
                <filtering>false</filtering>
            </resource>
            <!-- 可以根据需要配置其他资源目录 -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <!--        <testResources>-->
        <!--            <testResource>-->
        <!--                <directory>src/main/java</directory>-->
        <!--                <includes>-->
        <!--                    <include>**/*.xml</include>-->
        <!--                </includes>-->
        <!--                <filtering>false</filtering>-->
        <!--            </testResource>-->
        <!--        </testResources>-->
        <!-- 注：maven默认是不编译，因此加上如下resources才会生产对应的xml文件 目的：解决mybatis映射关系不对应问题  end =============== -->

        <!-- 固定Jar包名字 -->
        <finalName>data-factory</finalName>
    </build>

</project>
